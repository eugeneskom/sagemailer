{"version":3,"sources":["01_main.js"],"names":["document","addEventListener","mediaQuery","window","matchMedia","deviseWidth","e","matches","target","closest","currentBlock","querySelector","classList","toggle","nextElementSibling","console","log","$","styler","ShootingStars","Star","debounce","extend","requestAnimationFrame","size","rotate","points","outerRadius","innerRadius","borderColor","fillColor","x","y","starCanvas","this","color","border","outerRad","innerRad","rotation","opacity","scale","vx","Math","random","vy","life","ss","prototype","update","canvas","maxLife","particlePool","particles","floor","width","height","self","push","shift","render","context","i","rad","starContext","createElement","getContext","save","fillStyle","strokeStyle","globalAlpha","translate","PI","beginPath","lineTo","cos","sin","fill","stroke","restore","drawImage","func","delay","inDebounce","args","arguments","clearTimeout","setTimeout","apply","a","b","key","hasOwnProperty","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","callback","config","canvasId","defaults","id","particleLife","particleRenderProbability","amount","resizePoll","star","upper","lower","rotateLimit","options","getElementById","innerWidth","innerHeight","ctx","particleProbability","poolSize","flushPool","getRandomFromRange","results","max","min","p","that","clearRect","length","call"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n\r\n  const mediaQuery = window.matchMedia('(max-width: 768px)')\r\n\r\n  function deviseWidth(e) {\r\n    // Check if the media query is true\r\n    if (e.matches) {\r\n      document.addEventListener('click', showMore);\r\n      function showMore(e) {\r\n        if (e.target.closest('.info-card__top')) {\r\n          let currentBlock = e.target.closest('.info-card__top');\r\n          currentBlock.querySelector('.info-card__cross').classList.toggle('info-card__cross--active');\r\n          currentBlock.nextElementSibling.classList.toggle('info-card__text--active')\r\n        }\r\n      }\r\n\r\n      console.log('Media Query Matched!')\r\n    }\r\n  }\r\n\r\n  // Register event listener\r\n  mediaQuery.addEventListener(deviseWidth)\r\n\r\n  // Initial check\r\n  deviseWidth(mediaQuery)\r\n\r\n\r\n  $(\".prices-card__select\").styler();\r\n\r\n\r\n\r\n\r\n  (function () {\r\n    var ShootingStars, Star, debounce, extend, requestAnimationFrame; Star = function (size, rotate, points, outerRadius, innerRadius, borderColor, fillColor, x, y, starCanvas) { var self; self = this; self.x = x; self.y = y; self.size = size; self.color = fillColor; self.border = borderColor; self.outerRad = outerRadius; self.innerRad = innerRadius; self.rotation = rotate; self.points = points; self.opacity = 0; self.scale = 0; self.vx = Math.random() * 2 - 1; self.vy = Math.random() * 2 - 1; self.life = 0; self.ss = starCanvas; return self; }; Star.prototype.update = function () {\r\n      var canvas, maxLife, particlePool, particles; this.x += this.vx; this.y += this.vy; canvas = this.ss.canvas; maxLife = this.ss.maxLife; particlePool = this.ss.particlePool; particles = this.ss.particles; if (this.opacity < 1 && this.life < (maxLife / 6)) { this.opacity += (100 / (maxLife / 6)) / 100; this.scale += (100 / (maxLife / 6)) / 100; }\r\n      this.life++; if (maxLife - this.life < (maxLife / 6)) { this.scale -= (100 / (maxLife / 6)) / 100; }\r\n      if (maxLife - this.life < (maxLife / 3)) { this.vy *= 1.075; this.vx *= 1.075; this.opacity = (maxLife - this.life) / 100; } else if (this.life % 2 === 0) { this.rotation++; }\r\n      if (this.life >= maxLife) { this.life = 0; this.scale = 0; this.x = Math.floor((Math.random() * canvas.width) + 1); this.y = Math.floor((Math.random() * canvas.height) + 1); this.vx = Math.random() - 0.5; this.vy = Math.random() - 0.5; self.vx = Math.random() * 2 - 1; self.vy = Math.random() * 2 - 1; particlePool.push(particles.shift()); }\r\n      return this;\r\n    }; Star.prototype.render = function (context) {\r\n      var i, rad, rotation, star, starCanvas, starContext; star = this; starCanvas = document.createElement('canvas'); starCanvas.width = star.size; starCanvas.height = star.size; starContext = starCanvas.getContext('2d'); starContext.save(); starContext.fillStyle = star.color; starContext.strokeStyle = star.border; starContext.globalAlpha = star.opacity; starContext.translate(star.size / 2, star.size / 2); starContext.rotate(star.rotation * Math.PI / 180); starContext.translate(-(star.size / 2), -(star.size / 2)); starContext.scale(star.scale, star.scale); starContext.beginPath(); i = 0; while (i <= (star.points * 2)) { rotation = i * Math.PI / star.points; rad = i % 2 === 0 ? star.outerRad : star.innerRad; starContext.lineTo((star.size / 2) + rad * Math.cos(rotation), (star.size / 2) + rad * Math.sin(rotation)); ++i; }\r\n      starContext.fill(); starContext.stroke(); starContext.restore(); return context.drawImage(starCanvas, star.x, star.y);\r\n    }; debounce = function (func, delay) { var inDebounce; inDebounce = void 0; inDebounce = void 0; return function () { var args, context; args = void 0; context = void 0; context = this; args = arguments; clearTimeout(inDebounce); return inDebounce = setTimeout((function () { return func.apply(context, args); }), delay); }; }; extend = function (a, b) {\r\n      var key; for (key in b) { if (b.hasOwnProperty(key) && b[key] !== void 0) { a[key] = b[key]; } }\r\n      return a;\r\n    }; requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) { return setTimeout(callback, 1000 / 60); }; window.ShootingStars = ShootingStars = function (config) { var canvas, canvasId, defaults, self; self = this; canvasId = config.id; defaults = { particleLife: 300, particleRenderProbability: 0.05, amount: 5, resizePoll: 250, star: { size: { upper: 50, lower: 25 }, rotateLimit: 45, points: 5, innerRadius: 0.5, borderColor: '#000', fillColor: 'red' } }; self.options = extend(defaults, config); self.canvas = canvas = document.getElementById(canvasId); canvas.width = window.innerWidth; canvas.height = window.innerHeight; canvas.ctx = canvas.getContext('2d'); self.maxLife = self.options.particleLife; self.particles = []; self.particlePool = []; self.particleProbability = self.options.particleRenderProbability; self.poolSize = self.options.amount; window.addEventListener('resize', debounce((function () { self.canvas.width = window.innerWidth; self.canvas.height = window.innerHeight; self.flushPool(); }), self.options.resizePoll)); return self; }; ShootingStars.prototype.flushPool = function () {\r\n      var canvas, getRandomFromRange, i, particlePool, particles, poolSize, results, rotation, size, that; that = this; canvas = that.canvas; particlePool = that.particlePool = []; particles = that.particles = []; poolSize = self.poolSize = that.options.amount; if (canvas.width < 450) { poolSize = self.poolSize = poolSize / 2; }\r\n      i = 0; results = []; while (i < poolSize) { getRandomFromRange = function (max, min) { return Math.floor(Math.random() * (max - min + 1) + min); }; size = getRandomFromRange(that.options.star.size.upper, that.options.star.size.lower); rotation = getRandomFromRange(that.options.star.rotateLimit, 0); particlePool.push(new Star(size, rotation, 5, size / 2, (size / 2) * that.options.star.innerRadius, this.options.star.borderColor, this.options.star.fillColor, Math.floor((Math.random() * canvas.width) + 1), Math.floor((Math.random() * canvas.height) + 1), that)); results.push(i++); }\r\n      return results;\r\n    }; ShootingStars.prototype.render = function () {\r\n      var canvas, ctx, p, particlePool, particles, that; that = this; canvas = that.canvas; ctx = canvas.ctx; particlePool = that.particlePool; particles = that.particles; ctx.save(); ctx.clearRect(0, 0, canvas.width, canvas.height); if (Math.random() > that.particleProbability && particles.length < that.poolSize && particlePool.length > 0) { particles.push(particlePool.shift()); }\r\n      p = 0; while (p < particles.length) {\r\n        particles[p].update(); if (particles[p]) { particles[p].render(ctx); }\r\n        p++;\r\n      }\r\n      ctx.restore(); return requestAnimationFrame(function () { return that.render(); });\r\n    };\r\n  }).call(this);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n});// DOM READY"]}